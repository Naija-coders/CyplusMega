[{"/Users/oghenemano/cyplusmega/cyplusmega/pages/_app.tsx":"1","/Users/oghenemano/cyplusmega/cyplusmega/pages/api/hello.ts":"2","/Users/oghenemano/cyplusmega/cyplusmega/pages/index.tsx":"3","/Users/oghenemano/cyplusmega/cyplusmega/components/Navbar/Navbar.tsx":"4","/Users/oghenemano/cyplusmega/cyplusmega/components/Navbar/styles.tsx":"5","/Users/oghenemano/cyplusmega/cyplusmega/pages/api/client.js":"6","/Users/oghenemano/cyplusmega/cyplusmega/components/AvailableServices/AvailableService.tsx":"7","/Users/oghenemano/cyplusmega/cyplusmega/components/AvailableServices/index.tsx":"8","/Users/oghenemano/cyplusmega/cyplusmega/components/Banner/Banner.tsx":"9","/Users/oghenemano/cyplusmega/cyplusmega/components/Banner/Index.tsx":"10","/Users/oghenemano/cyplusmega/cyplusmega/components/Banner/styles.tsx":"11","/Users/oghenemano/cyplusmega/cyplusmega/components/Footer/Footer.tsx":"12","/Users/oghenemano/cyplusmega/cyplusmega/components/Footer/index.tsx":"13","/Users/oghenemano/cyplusmega/cyplusmega/components/Footer/styles.tsx":"14","/Users/oghenemano/cyplusmega/cyplusmega/pages/all-services.tsx":"15","/Users/oghenemano/cyplusmega/cyplusmega/pages/categories.tsx":"16","/Users/oghenemano/cyplusmega/cyplusmega/pages/profile.tsx":"17","/Users/oghenemano/cyplusmega/cyplusmega/pages/services.tsx":"18","/Users/oghenemano/cyplusmega/cyplusmega/pages/testing.js":"19","/Users/oghenemano/cyplusmega/cyplusmega/components/AvailableServices/styles.tsx":"20","/Users/oghenemano/cyplusmega/cyplusmega/components/Categories/Categories.tsx":"21","/Users/oghenemano/cyplusmega/cyplusmega/components/Categories/index.tsx":"22","/Users/oghenemano/cyplusmega/cyplusmega/components/Categories/styles.tsx":"23","/Users/oghenemano/cyplusmega/cyplusmega/components/LatestServices/LatestServices.tsx":"24","/Users/oghenemano/cyplusmega/cyplusmega/components/LatestServices/index.tsx":"25","/Users/oghenemano/cyplusmega/cyplusmega/components/LatestServices/styles.tsx":"26","/Users/oghenemano/cyplusmega/cyplusmega/components/LoginModal/Loginmodal.tsx":"27","/Users/oghenemano/cyplusmega/cyplusmega/components/Profile/Profile.tsx":"28","/Users/oghenemano/cyplusmega/cyplusmega/components/Profile/index.tsx":"29","/Users/oghenemano/cyplusmega/cyplusmega/components/SideBar/SideBar.tsx":"30","/Users/oghenemano/cyplusmega/cyplusmega/components/Featured/Featured.tsx":"31","/Users/oghenemano/cyplusmega/cyplusmega/components/Featured/styles.tsx":"32","/Users/oghenemano/cyplusmega/cyplusmega/components/PostJob/postjob.tsx":"33","/Users/oghenemano/cyplusmega/cyplusmega/components/Postadvertisement/postadvertisement.tsx":"34","/Users/oghenemano/cyplusmega/cyplusmega/components/TopCategories/TopCategories.tsx":"35","/Users/oghenemano/cyplusmega/cyplusmega/components/TopCategories/styles.tsx":"36","/Users/oghenemano/cyplusmega/cyplusmega/components/CustomLoader/CustomLoader.tsx":"37","/Users/oghenemano/cyplusmega/cyplusmega/components/CustomLoader/index.tsx":"38","/Users/oghenemano/cyplusmega/cyplusmega/components/Recommended/Recommended.tsx":"39","/Users/oghenemano/cyplusmega/cyplusmega/components/Recommended/style.tsx":"40","/Users/oghenemano/cyplusmega/cyplusmega/pages/contact-us.tsx":"41","/Users/oghenemano/cyplusmega/cyplusmega/pages/my-favorite.tsx":"42","/Users/oghenemano/cyplusmega/cyplusmega/pages/order.tsx":"43","/Users/oghenemano/cyplusmega/cyplusmega/pages/privacy-security.tsx":"44","/Users/oghenemano/cyplusmega/cyplusmega/components/Authentication/Signin/Signin.tsx":"45","/Users/oghenemano/cyplusmega/cyplusmega/components/Authentication/Signin/index.tsx":"46","/Users/oghenemano/cyplusmega/cyplusmega/components/Authentication/Signin/styles.tsx":"47","/Users/oghenemano/cyplusmega/cyplusmega/components/Authentication/Signup/Signup.tsx":"48","/Users/oghenemano/cyplusmega/cyplusmega/components/CookieManager/Cookie.tsx":"49","/Users/oghenemano/cyplusmega/cyplusmega/components/CustomersFavorite/CustomerFavorite.tsx":"50","/Users/oghenemano/cyplusmega/cyplusmega/components/Profile/ContactUs/ContactUs.tsx":"51","/Users/oghenemano/cyplusmega/cyplusmega/components/Profile/Orders/Orders.tsx":"52","/Users/oghenemano/cyplusmega/cyplusmega/components/Profile/Security/EditLogin.tsx":"53","/Users/oghenemano/cyplusmega/cyplusmega/components/Profile/styles.tsx":"54","/Users/oghenemano/cyplusmega/cyplusmega/components/Authentication/Signup/styles.tsx":"55","/Users/oghenemano/cyplusmega/cyplusmega/components/Service/Service.tsx":"56","/Users/oghenemano/cyplusmega/cyplusmega/components/Service/styles.tsx":"57","/Users/oghenemano/cyplusmega/cyplusmega/components/LanguageMenu/index.tsx":"58","/Users/oghenemano/cyplusmega/cyplusmega/components/LanguageMenu/styles.tsx":"59","/Users/oghenemano/cyplusmega/cyplusmega/pages/layout.tsx":"60","/Users/oghenemano/cyplusmega/cyplusmega/components/Search/Search.tsx":"61","/Users/oghenemano/cyplusmega/cyplusmega/components/Search/styles.tsx":"62","/Users/oghenemano/cyplusmega/cyplusmega/components/Service/Swiper/index.tsx":"63"},{"size":1352,"mtime":1654364789177,"results":"64","hashOfConfig":"65"},{"size":307,"mtime":1650569616879,"results":"66","hashOfConfig":"65"},{"size":1704,"mtime":1654364789359,"results":"67","hashOfConfig":"65"},{"size":15617,"mtime":1654805849500,"results":"68","hashOfConfig":"65"},{"size":3236,"mtime":1654806215927,"results":"69","hashOfConfig":"65"},{"size":1138,"mtime":1651178053544,"results":"70","hashOfConfig":"65"},{"size":10273,"mtime":1654802088245,"results":"71","hashOfConfig":"65"},{"size":42,"mtime":1651062887801,"results":"72","hashOfConfig":"65"},{"size":2655,"mtime":1654805244314,"results":"73","hashOfConfig":"65"},{"size":32,"mtime":1651062887803,"results":"74","hashOfConfig":"65"},{"size":2120,"mtime":1654805029354,"results":"75","hashOfConfig":"65"},{"size":558,"mtime":1654351976383,"results":"76","hashOfConfig":"65"},{"size":32,"mtime":1651062887804,"results":"77","hashOfConfig":"65"},{"size":889,"mtime":1654351976388,"results":"78","hashOfConfig":"65"},{"size":158,"mtime":1654351976749,"results":"79","hashOfConfig":"65"},{"size":253,"mtime":1654351976908,"results":"80","hashOfConfig":"65"},{"size":270,"mtime":1654351976925,"results":"81","hashOfConfig":"65"},{"size":341,"mtime":1654807550903,"results":"82","hashOfConfig":"65"},{"size":1654,"mtime":1654351976928,"results":"83","hashOfConfig":"65"},{"size":1272,"mtime":1654808176068,"results":"84","hashOfConfig":"65"},{"size":7212,"mtime":1654351976074,"results":"85","hashOfConfig":"65"},{"size":40,"mtime":1654351976076,"results":"86","hashOfConfig":"65"},{"size":1896,"mtime":1654351976079,"results":"87","hashOfConfig":"65"},{"size":14767,"mtime":1654808583991,"results":"88","hashOfConfig":"65"},{"size":44,"mtime":1654351976392,"results":"89","hashOfConfig":"65"},{"size":3297,"mtime":1654809014034,"results":"90","hashOfConfig":"65"},{"size":2648,"mtime":1654351976404,"results":"91","hashOfConfig":"65"},{"size":2893,"mtime":1654351976634,"results":"92","hashOfConfig":"65"},{"size":37,"mtime":1654351976660,"results":"93","hashOfConfig":"65"},{"size":4128,"mtime":1654351976675,"results":"94","hashOfConfig":"65"},{"size":1827,"mtime":1654802699592,"results":"95","hashOfConfig":"65"},{"size":1097,"mtime":1654802699690,"results":"96","hashOfConfig":"65"},{"size":488,"mtime":1654351976425,"results":"97","hashOfConfig":"65"},{"size":1227,"mtime":1654351976431,"results":"98","hashOfConfig":"65"},{"size":14386,"mtime":1654809082817,"results":"99","hashOfConfig":"65"},{"size":3296,"mtime":1654809114212,"results":"100","hashOfConfig":"65"},{"size":362,"mtime":1654351976089,"results":"101","hashOfConfig":"65"},{"size":42,"mtime":1654351976097,"results":"102","hashOfConfig":"65"},{"size":103,"mtime":1654351976665,"results":"103","hashOfConfig":"65"},{"size":91,"mtime":1654351976666,"results":"104","hashOfConfig":"65"},{"size":105,"mtime":1654351976914,"results":"105","hashOfConfig":"65"},{"size":245,"mtime":1654351976921,"results":"106","hashOfConfig":"65"},{"size":91,"mtime":1654351976922,"results":"107","hashOfConfig":"65"},{"size":113,"mtime":1654351976924,"results":"108","hashOfConfig":"65"},{"size":6289,"mtime":1654351976029,"results":"109","hashOfConfig":"65"},{"size":32,"mtime":1654351976042,"results":"110","hashOfConfig":"65"},{"size":1997,"mtime":1654351976043,"results":"111","hashOfConfig":"65"},{"size":6240,"mtime":1654351976048,"results":"112","hashOfConfig":"65"},{"size":752,"mtime":1654351976085,"results":"113","hashOfConfig":"65"},{"size":1206,"mtime":1654351976377,"results":"114","hashOfConfig":"65"},{"size":99,"mtime":1654351976432,"results":"115","hashOfConfig":"65"},{"size":96,"mtime":1654351976625,"results":"116","hashOfConfig":"65"},{"size":99,"mtime":1654351976644,"results":"117","hashOfConfig":"65"},{"size":1652,"mtime":1654351976661,"results":"118","hashOfConfig":"65"},{"size":1997,"mtime":1654351976056,"results":"119","hashOfConfig":"65"},{"size":7819,"mtime":1654810108231,"results":"120","hashOfConfig":"65"},{"size":3676,"mtime":1654809367015,"results":"121","hashOfConfig":"65"},{"size":2047,"mtime":1654364789143,"results":"122","hashOfConfig":"65"},{"size":888,"mtime":1654373801613,"results":"123","hashOfConfig":"65"},{"size":423,"mtime":1654807531840,"results":"124","hashOfConfig":"65"},{"size":872,"mtime":1654806125098,"results":"125","hashOfConfig":"65"},{"size":592,"mtime":1654806402367,"results":"126","hashOfConfig":"65"},{"size":1395,"mtime":1654810198883,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16rjz69",{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311"},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/oghenemano/cyplusmega/cyplusmega/pages/_app.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/pages/api/hello.ts",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/pages/index.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Navbar/Navbar.tsx",["327","328","329"],[],"import { useTranslation } from \"react-i18next\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Dispatch } from \"redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { actionCreators } from \"../../state\";\n\nimport { RootState } from \"../../state/reducers\";\nimport i18next from \"../../i18n/index\";\nimport i18n from \"../../i18n/index\";\n\nimport dynamic from \"next/dynamic\";\n\nconst LanguageMenu = dynamic(() => import(\"../LanguageMenu\"), {\n  ssr: false,\n});\n\n//plus button\nimport AddBoxRoundedIcon from \"@mui/icons-material/AddBoxRounded\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\nimport Search from \"../Search/Search\";\n\nimport Divider from \"@mui/material/Divider\";\nimport ListItem from \"@mui/material/ListItem\";\n\nimport {\n  AppBar,\n  Typography,\n  Link,\n  Box,\n  ListItemText,\n  Button,\n  TextField,\n  InputAdornment,\n  IconButton,\n  ListItemIcon,\n  List,\n  ListItemButton,\n  Avatar,\n  Menu,\n  MenuItem,\n} from \"@mui/material\";\n\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport { useRouter } from \"next/router\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport {\n  StyledAppBar,\n  StyledButton,\n  StyledTypography,\n  StyledDiv,\n  StyledSearchSubmitButton,\n  StyledTextField,\n  StyledMainButton,\n  StyledIconButton,\n  StyledMenu,\n  MobileMenu,\n  StyledLoginIcon,\n} from \"./styles\";\nimport KeyboardArrowDown from \"@mui/icons-material/KeyboardArrowDown\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport MenuRoundedIcon from \"@mui/icons-material/MenuRounded\";\nimport { LoginModal } from \"../LoginModal/Loginmodal\";\nimport VerifiedIcon from \"@mui/icons-material/Verified\";\nimport StateContext from \"../../context/StateContext\";\nimport DispatchContext from \"../../context/DispatchContext\";\nimport Clientapi from \"../../pages/api/client\";\nimport HowToRegRoundedIcon from \"@mui/icons-material/HowToRegRounded\";\nimport ForumIcon from \"@mui/icons-material/Forum\";\n\nimport Cookies from \"js-cookie\";\n\ntype Props = {\n  isfixed?: boolean;\n  showSearch?: boolean;\n};\nconst Navbar: React.FC<Props> = ({ isfixed, showSearch }) => {\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const [categories, setCategories] = useState([]);\n  const { AuthState } = useContext<any>(StateContext);\n  const { AuthDispatcher } = useContext<any>(DispatchContext);\n  const dispatch: Dispatch<any> = useDispatch();\n\n  const route = useRouter();\n  const handleClose = () => {\n    setOpen(false);\n    setAnchorEl(null);\n    setMyaccount(false);\n  };\n\n  const [scroll, setScroll] = useState(\"33px\");\n  const [myaccount, setMyaccount] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [mainservice, setMainservices] = useState([]);\n  const [allservices, setAllservices] = useState([]);\n  const [anchorElmenu, setAnchorElmenu] = React.useState<null | HTMLElement>(\n    null\n  );\n  const displaylist = Boolean(anchorEl);\n  const displaymenu = Boolean(anchorElmenu);\n  const handleProfileClicks = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n    setMyaccount(!myaccount);\n  };\n  const handleCloseMenu = () => {\n    setAnchorElmenu(null);\n  };\n  const [menu, setMenu] = useState(true);\n  const handleMenuClicks = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorElmenu(event.currentTarget);\n    setMenu(!menu);\n  };\n  const handleScroll = () => {\n    setScroll(\"0%\");\n  };\n  const handleScrollclose = () => {\n    setScroll(\"33px\");\n  };\n  useEffect(() => {\n    window.onscroll = () =>\n      window.pageYOffset === 0 ? handleScrollclose() : handleScroll();\n  });\n  const state = useSelector((state: RootState) => state.appstate);\n  console.log(\"confirmation of the state \", state);\n  console.log(\"checking the category state\", state.categories);\n  //button color is FCA301\n  const UserFavorite = () => {\n    Clientapi.get(\"api/user/favorite\").then((res) => {\n      const favorite = res.data;\n      AuthDispatcher({ type: \"getfavorite\", payload: favorite });\n      getuserfavorite(favorite);\n    });\n  };\n  const [slide, setSlide] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const list = () => <div>coming soon</div>;\n\n  const {\n    depositMoney,\n    storecategory,\n    mainServices,\n    getuserfavorite,\n    getallservices,\n  } = bindActionCreators(actionCreators, dispatch);\n  useEffect(() => {\n    if (categories.length === 0) {\n      Clientapi.get(\"api/Categories\").then((response) => {\n        setCategories(response.data);\n        AuthDispatcher({ type: \"addCategories\", payload: response.data });\n        console.log(\n          \"checking data\",\n          AuthDispatcher({ type: \"addCategories\", payload: response.data })\n        );\n        storecategory(response.data);\n        AuthDispatcher({ type: \"displayCategories\" });\n      });\n\n      console.log(\"the lenght wasnt fetched\", AuthState.categorydata);\n    }\n    if (mainservice.length === 0) {\n      Clientapi.get(\"/api/company/categories\").then((response) => {\n        mainServices(response.data);\n      });\n    }\n    if (allservices.length === 0) {\n      Clientapi.get(\"/api/company/allservices\").then((response) => {\n        getallservices(response.data);\n      });\n    }\n\n    if (AuthState.isLoggedIn) {\n      Clientapi.get(\"api/user\").then((response) => {\n        const user = response.data;\n        AuthDispatcher({ type: \"addUser\", payload: user });\n        console.log(AuthState.user);\n\n        //checking dispatch for reducer\n        depositMoney(user);\n      });\n    }\n  }, [categories]);\n\n  let catvalue = state.categories?.slice(0, 14);\n  console.log(\"this are the categories\", categories);\n  const toggleDrawer =\n    (anchor: \"left\", open: boolean) =>\n    (event: React.KeyboardEvent | React.MouseEvent) => {\n      if (\n        event &&\n        event.type === \"keydown\" &&\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\n          (event as React.KeyboardEvent).key === \"Shift\")\n      ) {\n        return;\n      }\n\n      setSlide({ ...state, [anchor]: open });\n    };\n\n  const HandleLogout = () => {\n    Clientapi.get(\"api/logout\").then((response) => {\n      const user = response.data;\n      console.log(\"logging out\");\n      Cookies.remove(\"auth_token\");\n      AuthDispatcher({ type: \"logout\" });\n      handleClose();\n    });\n  };\n\n  const imagelist = [\n    \"ITservice.png\",\n    \"cleaningservice.png\",\n    \"Eventservice.png\",\n    \"entertainmentservices.png\",\n    \"childcareservices.jpeg\",\n    \"automativeservices.jpeg\",\n    \"building&tradeservices.png\",\n    \"legalservices.png\",\n    \"image&beautyservices.jpeg\",\n    \"landscaping&gardeningservices.jpeg\",\n    \"logisticsservices.png\",\n    \"printingservices.png\",\n    \"photography&videoservices.png\",\n    \"weddingeventsservices.jpeg\",\n  ];\n  const RenderMobile = () => {\n    return (\n      <div className=\"navbar__nav_mobile\">\n        <IconButton onClick={handleMenuClicks} onMouseLeave={handleCloseMenu}>\n          <MenuRoundedIcon />\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorElmenu}\n            open={displaymenu}\n            onClose={handleCloseMenu}\n            MenuListProps={{\n              \"aria-labelledby\": \"basic-button\",\n            }}\n          >\n            {\" \"}\n            <Box>\n              {catvalue?.map(\n                (\n                  item: {\n                    type:\n                      | boolean\n                      | React.ReactChild\n                      | React.ReactFragment\n                      | React.ReactPortal\n                      | null\n                      | undefined;\n                  },\n                  i: string | number | any\n                ) => (\n                  <MenuItem key={Math.random()}>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignSelf: \"self-end\",\n                      }}\n                    >\n                      <Typography\n                        style={{\n                          fontFamily: \"serif\",\n\n                          fontSize: \"0.9rem\",\n                        }}\n                      >\n                        <img\n                          src={imagelist[i]}\n                          style={{\n                            height: \"20px\",\n                            width: \"20px\",\n                            position: \"relative\",\n                            top: \"4px\",\n                            left: -10,\n                          }}\n                        />\n                        {item?.type}\n                      </Typography>\n                    </div>\n                  </MenuItem>\n                )\n              )}\n              <MenuItem onClick={handleCloseMenu}>\n                <Typography\n                  style={{\n                    fontFamily: \"serif\",\n\n                    fontSize: \"0.9rem\",\n                  }}\n                >\n                  Other Services\n                </Typography>\n              </MenuItem>\n            </Box>\n          </Menu>\n        </IconButton>\n\n        <StyledTextField\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n          size=\"small\"\n        />\n      </div>\n    );\n  };\n  return (\n    <StyledAppBar position={isfixed ? \"relative\" : \"fixed\"}>\n      <div className=\"navbar__container\">\n        <div className=\"navbar__mainwrapper\">\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"left\",\n              alignItems: \"center\",\n            }}\n          >\n            <MobileMenu onClick={toggleDrawer(\"left\", true)}>\n              <MenuRoundedIcon sx={{ color: \"white\" }} />\n            </MobileMenu>\n            <SwipeableDrawer\n              anchor={\"left\"}\n              open={slide[\"left\"]}\n              onClose={toggleDrawer(\"left\", false)}\n              onOpen={toggleDrawer(\"left\", true)}\n            >\n              {list()}\n            </SwipeableDrawer>\n            <StyledTypography\n              onClick={() => {\n                route.push(\"/\");\n              }}\n              sx={{ fontFamily: \"GeoticaW01-FourOpen\", cursor: \"pointer\" }}\n            >\n              GreatServices\n            </StyledTypography>\n          </div>\n        </div>\n        <StyledDiv>\n          <Search isVisible={showSearch} />\n          <StyledMainButton variant=\"contained\" size=\"small\">\n            Post a Service{\" \"}\n            <KeyboardArrowDown sx={{ transform: \"rotate(270deg)\" }} />\n          </StyledMainButton>\n          <StyledIconButton sx={{ color: \"#ffff\" }}>\n            <NotificationsIcon />\n          </StyledIconButton>\n          <StyledIconButton\n            onClick={() => {\n              route.push(\"/my-favorite\");\n            }}\n            sx={{ color: \"#ffff\" }}\n          >\n            <FavoriteIcon />\n          </StyledIconButton>\n\n          {/*      <p\n            onClick={() => {\n              handleLanguageChange(\"en\");\n            }}\n          >\n            EN\n            \n          </p> */}\n\n          <div>\n            {AuthState.user ? (\n              <>\n                <StyledButton\n                  variant=\"text\"\n                  sx={{ textTransform: \"none\" }}\n                  onClick={handleProfileClicks}\n                  aria-controls={open ? \"basic-menu\" : undefined}\n                  aria-haspopup=\"true\"\n                  aria-expanded={open ? \"true\" : undefined}\n                >\n                  <Avatar /> &nbsp; Hi {AuthState.user.name}{\" \"}\n                  {myaccount ? (\n                    <>\n                      {\" \"}\n                      <KeyboardArrowDown\n                        sx={{ transform: \"rotate(180deg)\" }}\n                      />{\" \"}\n                    </>\n                  ) : (\n                    <>\n                      {\" \"}\n                      <KeyboardArrowDown\n                        sx={{ transform: \"rotate(0deg)\" }}\n                      />{\" \"}\n                      <StyledMenu\n                        id=\"basic-menu\"\n                        anchorEl={anchorEl}\n                        open={displaylist}\n                        onClose={handleClose}\n                        MenuListProps={{\n                          \"aria-labelledby\": \"basic-button\",\n                        }}\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            route.push(\"/profile\");\n                          }}\n                        >\n                          Profile\n                        </MenuItem>\n                        <MenuItem onClick={handleClose}>My account</MenuItem>\n                        <MenuItem onClick={HandleLogout}>Logout</MenuItem>\n                      </StyledMenu>\n                    </>\n                  )}\n                </StyledButton>\n                <div\n                  style={{\n                    display: \"flex\",\n\n                    justifyContent: \"center\",\n                    bottom: \"20px\",\n\n                    position: \"absolute\",\n                    right: 0,\n                  }}\n                >\n                  {/*    <StyledLoginIcon sx={{ color: \"#ffff\" }}>\n                    <FavoriteIcon sx={{ fontSize: \"1.3rem\" }} />\n                  </StyledLoginIcon>\n\n                  <StyledLoginIcon sx={{ color: \"#ffff\" }}>\n                    <NotificationsIcon sx={{ fontSize: \"1.3rem\" }} />\n                  </StyledLoginIcon> */}\n                  <StyledLoginIcon sx={{ color: \"#ffff\" }} onClick={handleOpen}>\n                    <Avatar sx={{ height: \"1.3rem\", width: \"1.3rem\" }} />\n                  </StyledLoginIcon>\n                </div>\n              </>\n            ) : (\n              <div>\n                <StyledButton\n                  variant=\"text\"\n                  sx={{ textTransform: \"none\" }}\n                  onClick={handleOpen}\n                >\n                  <PersonIcon /> Account <KeyboardArrowDown />\n                </StyledButton>\n                <LoginModal OpenModalForm={open} CloseModalForm={handleClose} />{\" \"}\n                <div\n                  style={{\n                    display: \"flex\",\n\n                    justifyContent: \"center\",\n                    bottom: \"20px\",\n\n                    position: \"absolute\",\n                    right: 0,\n                  }}\n                >\n                  {/*     <StyledLoginIcon sx={{ color: \"#ffff\" }}>\n                    <FavoriteIcon sx={{ fontSize: \"0.8rem\" }} />\n                  </StyledLoginIcon> */}\n\n                  {/*      <StyledLoginIcon sx={{ color: \"#ffff\" }}>\n                    <NotificationsIcon sx={{ fontSize: \"0.8rem\" }} />\n                  </StyledLoginIcon> */}\n                  <StyledLoginIcon sx={{ color: \"#ffff\" }} onClick={handleOpen}>\n                    <PersonIcon sx={{ fontSize: \"1.3rem\" }} />\n                  </StyledLoginIcon>\n                </div>\n              </div>\n            )}\n          </div>\n          <LanguageMenu />\n        </StyledDiv>\n      </div>\n    </StyledAppBar>\n  );\n};\n\nexport default Navbar;\n","/Users/oghenemano/cyplusmega/cyplusmega/components/Navbar/styles.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/pages/api/client.js",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/AvailableServices/AvailableService.tsx",["330","331","332","333","334"],[],"import React, { useState, useContext, useEffect } from \"react\";\nimport StateContext from \"../../context/StateContext\";\nimport DispatchContext from \"../../context/DispatchContext\";\nimport Paper from \"@mui/material/Paper\";\nimport { useTranslation } from \"react-i18next\";\nimport { Typography, List, Link, IconButton } from \"@mui/material\";\nimport { useRouter } from \"next/router\";\nimport Clientapi from \"../../pages/api/client\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport { Dispatch } from \"redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators } from \"../../state\";\nimport Card from \"@mui/material/Card\";\nimport { RootState } from \"../../state/reducers\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\n// Import Swiper styles\nimport \"swiper/css\";\nimport \"swiper/css/grid\";\nimport \"swiper/css/pagination\";\nimport { Grid, Pagination, Autoplay, Navigation } from \"swiper\";\n\nimport {\n  StyledLink,\n  StyledCard,\n  StyledCustomTypography,\n  StyledBox,\n  CustomDivContainer,\n  CustomContainer,\n} from \"./styles\";\n\ntype Props = {\n  services: any;\n};\n\nconst serviceimages = [\n  \"IT services.jpeg\",\n  \"Cleaning services.jpeg\",\n  \"event services.jpeg\",\n  \"entertainment services.jpeg\",\n  \"kidandtoy.jpeg\",\n  \"automotive services.jpeg\",\n  \"building & trade services.jpeg\",\n  \"legal services.jpeg\",\n  \"health & beauty services.jpeg\",\n  \"landscaping & gardening services.jpeg\",\n  \"logistics services.jpeg\",\n  \"printing services.jpeg\",\n  \"photography & video services.jpeg\",\n  \"wedding events services.jpeg\",\n  \"repair services.jpeg\",\n  \"fitness services.jpeg\",\n  \"Pet services...jpeg\",\n  \"travel agent & tour services.jpeg\",\n  \"classes & courses services.jpeg\",\n  \"manufacturing services.jpeg\",\n  \"chauffeur & airport services.jpeg\",\n];\n\nconst AvailableService = (props: Props) => {\n  const { t, i18n } = useTranslation();\n  const [checkhover, setCheckhover] = useState(false);\n  const [current, setCurrent] = useState(0);\n  const length = props.services.length;\n  const route = useRouter();\n  const { AuthState } = useContext<any>(StateContext);\n  const { AuthDispatcher } = useContext<any>(DispatchContext);\n  const dispatch: Dispatch<any> = useDispatch();\n  const state = useSelector((state: RootState) => state.appstate);\n  const [loaded, setLoaded] = useState(true);\n\n  function nextSlide() {\n    setCurrent(current === length - 10 ? 0 : current + 1);\n  }\n\n  function prevSlide() {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  }\n\n  const handleMousehover = (\n    event: React.MouseEventHandler<HTMLDivElement> | undefined\n  ) => {\n    setCheckhover(true);\n  };\n  const handleMouseClose = (\n    event: React.MouseEventHandler<HTMLDivElement> | undefined\n  ) => {\n    setCheckhover(false);\n  };\n  useEffect(() => {\n    if (state.categories === null || state.categories.length < 0) {\n      setLoaded(true);\n    } else if (state.categories.length > 0) {\n      setLoaded(false);\n    }\n  });\n\n  const RenderMobile = () => {\n    return (\n      <>\n        <div className=\"navbar__catwrappermobile\">\n          <div className=\"navbar__sizewidth\">\n            <Paper elevation={2}>\n              <StyledBox>\n                <StyledCustomTypography\n                  style={{\n                    marginLeft: \"20px\",\n                    fontFamily: \"serif\",\n                    fontSize: \"1.3rem\",\n                  }}\n                >\n                  {t(\"service_categories\")}\n                </StyledCustomTypography>\n              </StyledBox>\n              {loaded ? (\n                <Skeleton\n                  count={3}\n                  inline\n                  height={\"100px\"}\n                  containerClassName=\"flexitems__avalableservice\"\n                  style={{\n                    marginLeft: \"2px\",\n                  }}\n                  width={\"270px\"}\n                />\n              ) : (\n                <Swiper\n                  slidesPerView={3}\n                  spaceBetween={0}\n                  autoplay={{\n                    delay: 2500,\n                    disableOnInteraction: false,\n                  }}\n                  navigation={true}\n                  modules={[Autoplay, Navigation]}\n                  className=\"mySwiper\"\n                >\n                  {state.categories?.map(\n                    (\n                      item: {\n                        type:\n                          | boolean\n                          | React.ReactChild\n                          | React.ReactFragment\n                          | React.ReactPortal\n                          | null\n                          | undefined;\n                        categories_id: number;\n                      },\n                      i: string | number | any\n                    ) => (\n                      <SwiperSlide\n                        key={Math.random()}\n                        style={{ marginLeft: \"1%\", position: \"relative\" }}\n                      >\n                        <StyledCard elevation={0}>\n                          <StyledLink /* href={\"/categories?list=\" + item?.categories_id} */\n                            sx={{ textDecoration: \"none\", color: \"#000\" }}\n                            onClick={() => {\n                              route.push(\n                                \"/categories?services=\" + item?.categories_id\n                              );\n                            }}\n                          >\n                            {\" \"}\n                            <img\n                              src={serviceimages[i]}\n                              style={{\n                                width: \"100%\",\n                                height: \"100px\",\n                                borderRadius: \"13px\",\n\n                                cursor: \"pointer\",\n                                objectFit: \"cover\",\n                              }}\n                            />\n                            <Typography\n                              style={{\n                                fontFamily: \"serif\",\n                                fontSize: \"0.5rem\",\n                                textAlign: \"center\",\n                              }}\n                            >\n                              {item.type}\n                            </Typography>\n                          </StyledLink>\n                        </StyledCard>\n                      </SwiperSlide>\n                    )\n                  )}\n                </Swiper>\n              )}\n            </Paper>\n          </div>\n        </div>\n      </>\n    );\n  };\n  return (\n    <>\n      {RenderMobile()}\n      <div className=\"navbar__mycontainer\">\n        <CustomContainer>\n          <CustomDivContainer>\n            <Paper elevation={2}>\n              <StyledBox>\n                <StyledCustomTypography\n                  variant=\"h5\"\n                  style={{ marginLeft: \"2%\", fontFamily: \"serif\" }}\n                >\n                  {t(\"service_categories\")}\n                </StyledCustomTypography>\n              </StyledBox>\n              {loaded ? (\n                <Skeleton\n                  count={6}\n                  inline\n                  height={120}\n                  containerClassName=\"flexitems__avalableservice\"\n                  style={{\n                    marginLeft: \"2px\",\n                  }}\n                  width={\"270px\"}\n                />\n              ) : (\n                <Swiper\n                  slidesPerView={6}\n                  spaceBetween={0}\n                  autoplay={{\n                    delay: 2500,\n                    disableOnInteraction: false,\n                  }}\n                  navigation={true}\n                  modules={[Autoplay, Navigation]}\n                  className=\"mySwiper\"\n                >\n                  {state.categories?.map(\n                    (\n                      item: {\n                        type:\n                          | boolean\n                          | React.ReactChild\n                          | React.ReactFragment\n                          | React.ReactPortal\n                          | null\n                          | undefined;\n                        categories_id: number;\n                      },\n                      i: string | number | any\n                    ) => (\n                      <SwiperSlide\n                        key={Math.random()}\n                        style={{ marginLeft: \"1%\", position: \"relative\" }}\n                      >\n                        <StyledCard elevation={0}>\n                          <StyledLink /* href={\"/categories?list=\" + item?.categories_id} */\n                            sx={{ textDecoration: \"none\", color: \"#000\" }}\n                            onClick={() => {\n                              route.push(\n                                \"/categories?services=\" + item?.categories_id\n                              );\n                            }}\n                          >\n                            {\" \"}\n                            <img\n                              src={serviceimages[i]}\n                              style={{\n                                width: \"250px\",\n                                borderRadius: \"13px\",\n                                height: \"200px\",\n                                cursor: \"pointer\",\n                                objectFit: \"cover\",\n                              }}\n                            />\n                            <Typography\n                              style={{\n                                fontFamily: \"serif\",\n                                fontSize: \"0.9rem\",\n                              }}\n                            >\n                              {item.type}\n                            </Typography>\n                          </StyledLink>\n                        </StyledCard>\n                      </SwiperSlide>\n                    )\n                  )}\n                </Swiper>\n              )}\n            </Paper>\n          </CustomDivContainer>\n        </CustomContainer>\n      </div>\n    </>\n  );\n};\n\nexport default AvailableService;\n","/Users/oghenemano/cyplusmega/cyplusmega/components/AvailableServices/index.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Banner/Banner.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Banner/Index.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Banner/styles.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Footer/Footer.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Footer/index.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Footer/styles.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/pages/all-services.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/pages/categories.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/pages/profile.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/pages/services.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/pages/testing.js",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/AvailableServices/styles.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Categories/Categories.tsx",["335","336","337"],[],"import React, { useContext, useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport { IconButton, Paper } from \"@mui/material\";\n\nimport { useRouter } from \"next/router\";\nimport { Typography } from \"@mui/material\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Divider from \"@mui/material/Divider\";\nimport StateContext from \"../../context/StateContext\";\nimport DispatchContext from \"../../context/DispatchContext\";\nimport Button from \"@mui/material/Button\";\nimport Clientapi from \"../../pages/api/client\";\nimport { Dispatch } from \"redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators } from \"../../state\";\nimport { RootState } from \"../../state/reducers\";\nimport Card from \"@mui/material/Card\";\nimport { SideBar } from \"../SideBar/SideBar\";\n\nimport {\n  StyledTypography,\n  StyledLink,\n  CustomDrawer,\n  StyledHeader,\n  StyledAbout,\n  StyledPriceValue,\n  StyledPrice,\n  StyledButton,\n  StyledCard,\n} from \"./styles\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { HomeRepairServiceSharp } from \"@mui/icons-material\";\n\nconst drawerWidth = 240;\n\nexport default function Categories() {\n  const route = useRouter();\n  const query = route.query;\n  const [cardmouse, setCardmouse] = useState(1);\n  const { AuthState } = useContext<any>(StateContext);\n  const { AuthDispatcher } = useContext<any>(DispatchContext);\n  const lessvalue = AuthState.categorydata?.slice(0, 5);\n  const showall = AuthState.categorydata?.length - 5;\n  //the disptached data\n  const dispatch: Dispatch<any> = useDispatch();\n  //bind action\n\n  const state = useSelector((state: RootState) => state.appstate);\n  const [cat, setCat] = useState<number>();\n  const [services, setServices] = useState([]);\n\n  const handle = query[\"services\"];\n  console.log(\"the handle is \", handle);\n  const { storeservices } = bindActionCreators(actionCreators, dispatch);\n  const Mouseover = () => {\n    setCardmouse(10);\n  };\n  const MouseOut = () => {\n    setCardmouse(1);\n  };\n\n  function getIsbriskpackage() {\n    Clientapi.get(\"/api/company/categories\")\n      .then((response) => {\n        const offer = response.data.filter(\n          (items: any) => items?.categories_id == handle\n        );\n        storeservices(offer);\n        setServices(offer);\n        console.log(\"the services data is \", services);\n        console.log(\"fecthing the response data\", response.data);\n      })\n      .catch((error) => {});\n  }\n\n  useEffect(() => {\n    if (state.services.length <= 0) {\n      Clientapi.get(\"/api/company/categories\")\n        .then((response) => {\n          const offer = response.data.filter(\n            (items: any) => items?.categories_id == handle\n          );\n          storeservices(offer);\n          setServices(offer);\n          console.log(\"the services data is \", services);\n          console.log(\"fecthing the response data\", response.data);\n        })\n        .catch((error) => {});\n    } else {\n      getIsbriskpackage();\n    }\n    console.log(\"the service data is\", services);\n  }, []);\n  //the wrapper should be fixed for services\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n\n          top: \"12%\",\n          left: \"-2.5%\",\n          position: \"absolute\",\n        }}\n      >\n        <div className=\"listitem__mainlist\">\n          <ul>\n            <li>Home</li>\n          </ul>\n        </div>\n        <div className=\"listitem\">\n          <ul>\n            <li>Services</li>\n          </ul>\n        </div>\n      </div>\n      <div>\n        <Box sx={{ display: \"flex\", marginTop: \"7%\" }}>\n          <div style={{ position: \"relative\" }}>\n            <SideBar lessvalue={lessvalue} showall={showall} />\n          </div>\n\n          <Box\n            component=\"main\"\n            sx={{\n              flexGrow: 1,\n              bgcolor: \"background.default\",\n              marginRight: \"22px\",\n              p: 1,\n              borderRadius: \"12px\",\n            }}\n          >\n            <div className=\"product__gridval\">\n              {state.services?.map(\n                (\n                  item: {\n                    type:\n                      | boolean\n                      | React.ReactChild\n                      | React.ReactFragment\n                      | React.ReactPortal\n                      | null\n                      | undefined;\n                    name: string | null | undefined;\n                    price: number;\n                    image: string | null | undefined | any;\n                    about: string | null | undefined | any;\n                    title: string | null | undefined | any;\n                    services_id: number;\n                  },\n                  i: string | number | any\n                ) => {\n                  const styledelevation = [cardmouse];\n                  return (\n                    <StyledCard\n                      key={item.services_id}\n                      sx={{ width: \"270px\" }}\n                      onClick={() => {\n                        console.log(\"you clicked on me\", item.services_id);\n                      }}\n                    >\n                      <img\n                        src={item?.image}\n                        style={{\n                          height: \"150px\",\n                          width: \"90%\",\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          marginLeft: \"10px\",\n\n                          marginTop: \"10px\",\n                          borderRadius: \"10px\",\n                        }}\n                      />\n                      <div\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"end\",\n                          justifyItems: \"end\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        <StyledHeader>{item?.title}</StyledHeader>\n                        {/* maintain the state when the icon is clicked */}\n                        <IconButton>\n                          <FavoriteBorderIcon />\n                        </IconButton>\n                      </div>\n                      <StyledAbout>{item?.about.slice(0, 30)}...</StyledAbout>\n                      <div\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\n                      >\n                        <StyledPrice>Price: </StyledPrice>\n                        <StyledPriceValue>${item?.price}</StyledPriceValue>\n                      </div>\n                      <div\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\n                      >\n                        <StyledButton size=\"small\" variant=\"contained\">\n                          Make an Offer\n                        </StyledButton>\n                      </div>\n                    </StyledCard>\n                  );\n                }\n              )}\n            </div>\n          </Box>\n        </Box>\n        <div style={{ marginTop: \"40%\" }}></div>\n      </div>\n    </>\n  );\n}\n","/Users/oghenemano/cyplusmega/cyplusmega/components/Categories/index.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Categories/styles.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/LatestServices/LatestServices.tsx",["338","339","340","341","342"],[],"import React, { useState, useContext, useEffect } from \"react\";\nimport StateContext from \"../../context/StateContext\";\nimport DispatchContext from \"../../context/DispatchContext\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { Dispatch } from \"redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport { actionCreators } from \"../../state\";\nimport { RootState } from \"../../state/reducers\";\nimport Card from \"@mui/material/Card\";\nimport { Avatar, IconButton } from \"@mui/material\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport { LoginModal } from \"../LoginModal/Loginmodal\";\n\nimport { useRouter } from \"next/router\";\n\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport moment from \"moment\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport CustomLoader from \"../CustomLoader\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport Divider from \"@mui/material/Divider\";\n\nimport {\n  StyledLink,\n  StyledCard,\n  StyledTypographyHeader,\n  StyledPriceValue,\n  TextTypography,\n  StyledPrice,\n  StyledButton,\n  StyledTypography,\n  StyledIconButton,\n  StyledCustomTypography,\n  StyledBox,\n  CustomContainer,\n  CustomDivContainer,\n  LatestServicesDiv,\n} from \"./styles\";\nimport { StyledAbout } from \"../Categories/styles\";\ntype Props = {};\nconst LatestServices: React.FC<Props> = ({}) => {\n  const state = useSelector((state: RootState) => state.appstate);\n  const { AuthState } = useContext<any>(StateContext);\n  const { AuthDispatcher } = useContext<any>(DispatchContext);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const dispatch: Dispatch<any> = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [loaded, setLoaded] = useState(true);\n  const [active, setActive] = useState(false);\n\n  const route = useRouter();\n  const handleLogin = AuthState.user;\n  const [buttoncolor, setButtoncolor] = useState<any>(false);\n  const handleColor = () => {\n    if (!active) {\n      setActive(true);\n    } else {\n      setActive(false);\n    }\n  };\n  const [activeButton, setActiveButton] = useState([]);\n\n  const handleOpen = () => {\n    if (handleLogin === null || handleLogin === undefined) {\n      setLoggedIn(false);\n      setOpen(true);\n    } else {\n      setLoggedIn(true);\n      handleColor();\n      setOpen(false);\n      setButtoncolor(true);\n    }\n  };\n\n  useEffect(() => {\n    if (state.mainservices === null || state.mainservices.length < 0) {\n      setLoaded(true);\n    } else if (state.mainservices.length > 0) {\n      setLoaded(false);\n    }\n  });\n  console.log(\"displaying mainservices\", state.mainservices);\n  const Rendermobile = () => {\n    return (\n      <div className=\"navbar__catwrappermobile\">\n        <div className=\"navbar__sizewidth\">\n          <Paper elevation={0} sx={{ height: \"110%\" }}>\n            <StyledBox>\n              <StyledCustomTypography\n                sx={{\n                  marginLeft: \"20px\",\n                  fontFamily: \"serif\",\n                  fontSize: \"1.3rem\",\n                }}\n              >\n                Latest Services\n              </StyledCustomTypography>\n            </StyledBox>\n            {loaded ? (\n              <Skeleton\n                count={1}\n                height={\"100px\"}\n                containerClassName=\"flexitems__mobilelatestservices\"\n                style={{\n                  marginLeft: \"15px\",\n                  borderRadius: \"0.5rem\",\n\n                  justifyContent: \"center\",\n                  marginTop: \"10px\",\n                }}\n                width={\"350px\"}\n              />\n            ) : (\n              <div className=\"flexitems__mobilelatestservices\">\n                {state.mainservices.slice(0, 9)?.map(\n                  (\n                    item: {\n                      type:\n                        | boolean\n                        | React.ReactChild\n                        | React.ReactFragment\n                        | React.ReactPortal\n                        | null\n                        | undefined;\n                      categories_id: number;\n                      image: any;\n                      name: string;\n                      services_id: number;\n                      about: string;\n                      price: number;\n                      updated_at: string;\n                    },\n                    i: string | number | any\n                  ) => (\n                    <div\n                      key={item.services_id}\n                      style={{\n                        position: \"relative\",\n                      }}\n                    >\n                      <div\n                        key={Math.random()}\n                        onClick={() => {\n                          route.push(\"/services?ad=\" + item?.services_id);\n                        }}\n                      >\n                        <div\n                          style={{\n                            display: \"flex\",\n                            borderRadius: \"10px\",\n\n                            marginLeft: \"11px\",\n                            justifyContent: \"left\",\n                            gap: \"10px\",\n                          }}\n                        >\n                          <img\n                            src={item.image}\n                            style={{\n                              height: \"70px\",\n                              width: \"100px\",\n                              borderRadius: \"13px\",\n                              objectFit: \"cover\",\n                            }}\n                          ></img>\n                          <div>\n                            <StyledTypographyHeader>\n                              {\" \"}\n                              {item.about}\n                            </StyledTypographyHeader>\n                            <StyledPriceValue>${item.price}</StyledPriceValue>\n                          </div>\n                        </div>\n                        <div\n                          style={{\n                            display: \"flex\",\n                            borderRadius: \"10px\",\n\n                            marginLeft: \"11px\",\n                            justifyContent: \"left\",\n                            gap: \"3px\",\n                            marginTop: \"6px\",\n                          }}\n                        >\n                          <Avatar\n                            sx={{ height: \"16px\", width: \"16px\" }}\n                          ></Avatar>\n                          <TextTypography>{item.name}</TextTypography>\n                        </div>\n                      </div>\n                      <br></br>\n                      <Divider />\n                    </div>\n                  )\n                )}\n                <LoginModal\n                  OpenModalForm={open}\n                  CloseModalForm={() => setOpen(false)}\n                />{\" \"}\n              </div>\n            )}\n          </Paper>\n          <br></br>\n          <br></br>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <>\n      {Rendermobile()}\n      <div className=\"navbar__mycontainer\">\n        <CustomContainer>\n          <CustomDivContainer>\n            <Paper elevation={2} sx={{ height: \"110%\" }}>\n              <StyledBox>\n                <StyledCustomTypography\n                  variant=\"h5\"\n                  style={{ marginLeft: \"2%\", fontFamily: \"serif\" }}\n                >\n                  Latest Services\n                </StyledCustomTypography>\n                <StyledCustomTypography\n                  style={{\n                    marginRight: \"2%\",\n                    fontFamily: \"serif\",\n                    fontSize: \"15px\",\n                    textDecoration: \"underline\",\n                  }}\n                >\n                  See All\n                </StyledCustomTypography>\n              </StyledBox>\n              {loaded ? (\n                <Skeleton\n                  count={6}\n                  inline\n                  height={300}\n                  containerClassName=\"flexitems__latestservices\"\n                  style={{\n                    marginLeft: \"15px\",\n                    borderRadius: \"0.5rem\",\n\n                    justifyContent: \"center\",\n                    marginTop: \"10px\",\n                  }}\n                  width={\"270px\"}\n                />\n              ) : (\n                <LatestServicesDiv>\n                  {state.mainservices.slice(0, 9)?.map(\n                    (\n                      item: {\n                        type:\n                          | boolean\n                          | React.ReactChild\n                          | React.ReactFragment\n                          | React.ReactPortal\n                          | null\n                          | undefined;\n                        categories_id: number;\n                        image: any;\n                        name: string;\n                        services_id: number;\n                        about: string;\n                        price: number;\n                        updated_at: string;\n                      },\n                      i: string | number | any\n                    ) => (\n                      <div\n                        key={item.services_id}\n                        style={{\n                          position: \"relative\",\n                          marginLeft: \"1%\",\n                        }}\n                      >\n                        <StyledCard\n                          key={Math.random()}\n                          elevation={6}\n                          onClick={() => {\n                            route.push(\"/services?ad=\" + item?.services_id);\n                          }}\n                        >\n                          <div\n                            style={{\n                              width: \"100%\",\n                            }}\n                          >\n                            <div\n                              style={{\n                                display: \"flex\",\n                              }}\n                            >\n                              <img\n                                src={item.image}\n                                style={{\n                                  height: \"200px\",\n                                  width: \"100%\",\n                                  objectFit: \"cover\",\n                                }}\n                              ></img>\n                            </div>\n                            <div\n                              style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                marginLeft: \"4%\",\n                                marginTop: \"2%\",\n                              }}\n                            >\n                              <div style={{ display: \"flex\" }}>\n                                <span>\n                                  <Avatar />\n                                </span>\n                                <div\n                                  style={{\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                  }}\n                                >\n                                  <span>\n                                    <TextTypography>{item.name}</TextTypography>\n                                  </span>\n                                  <span>\n                                    <TextTypography>\n                                      {moment(item.updated_at).format(\n                                        \"MMM Do \"\n                                      )}\n                                    </TextTypography>\n                                  </span>\n                                </div>\n                              </div>\n                              <span>\n                                <StyledTypography>{item.type}</StyledTypography>\n                                <StyledTypographyHeader>\n                                  {item.about}\n                                </StyledTypographyHeader>\n                              </span>\n                              <div\n                                style={{\n                                  height: \"50px\",\n                                  background: \"#152238\",\n\n                                  width: \"114%\",\n                                  marginLeft: \"-4.5%\",\n                                  display: \"flex\",\n                                  marginTop: \"5%\",\n                                  justifyContent: \"flex-end\",\n                                  alignSelf: \"flex-end\",\n                                  justifyItems: \"flex-end\",\n\n                                  alignItems: \"flex-end\",\n                                }}\n                              >\n                                <div\n                                  style={{\n                                    display: \"flex\",\n                                    width: \"100%\",\n\n                                    alignSelf: \"flex-end\",\n\n                                    justifyContent: \"space-evenly\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <StyledIconButton\n                                    key={item.services_id}\n                                    onClick={handleOpen}\n                                  >\n                                    <FavoriteBorderIcon\n                                      style={{ color: \"white\" }}\n                                    />\n                                  </StyledIconButton>\n\n                                  <StyledPrice> STARTING AT</StyledPrice>\n                                  <StyledPriceValue>\n                                    ${item.price}\n                                  </StyledPriceValue>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </StyledCard>\n                      </div>\n                    )\n                  )}\n                  <LoginModal\n                    OpenModalForm={open}\n                    CloseModalForm={() => setOpen(false)}\n                  />{\" \"}\n                </LatestServicesDiv>\n              )}\n\n              <br></br>\n            </Paper>\n            <br></br>\n            <br></br>\n          </CustomDivContainer>\n        </CustomContainer>\n      </div>\n    </>\n  );\n};\nexport default LatestServices;\n","/Users/oghenemano/cyplusmega/cyplusmega/components/LatestServices/index.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/LatestServices/styles.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/LoginModal/Loginmodal.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Profile/Profile.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Profile/index.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/SideBar/SideBar.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Featured/Featured.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Featured/styles.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/PostJob/postjob.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Postadvertisement/postadvertisement.tsx",["343"],[],"import React from \"react\";\nimport { TextField, Button, Typography } from \"@mui/material\";\nimport Categories from \"../Categories/Categories\";\nimport AddBoxRoundedIcon from \"@mui/icons-material/AddBoxRounded\";\nimport { useState } from \"react\";\ntype Props = {\n  checkuser?: any;\n};\n\nconst Postadvertisement: React.FC<Props> = ({ checkuser }) => {\n  const [testuser, setTestuser] = useState<boolean>(false);\n  React.useEffect(() => {\n    if (checkuser === undefined || checkuser === null) setTestuser(true);\n  });\n\n  return (\n    <div className=\"side-nav-categories\">\n      <div className=\"title1\">\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n            justifyItems: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <AddBoxRoundedIcon sx={{ width: \"200px\", height: \"120px\" }} />\n          <Typography variant=\"body1\" color=\"white\">\n            {\" \"}\n            {testuser ? (\n              <>Post an Advertisement</>\n            ) : (\n              <>Welcome {checkuser} Post an Advert</>\n            )}\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Postadvertisement;\n","/Users/oghenemano/cyplusmega/cyplusmega/components/TopCategories/TopCategories.tsx",["344","345","346","347","348"],[],"import React, { useState, useContext, useEffect } from \"react\";\nimport StateContext from \"../../context/StateContext\";\nimport DispatchContext from \"../../context/DispatchContext\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { Dispatch } from \"redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport { RootState } from \"../../state/reducers\";\nimport { Avatar, IconButton } from \"@mui/material\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport { LoginModal } from \"../LoginModal/Loginmodal\";\nimport { Divider } from \"@mui/material\";\nimport { useRouter } from \"next/router\";\nimport moment from \"moment\";\n\nimport {\n  StyledLink,\n  StyledCard,\n  StyledTypographyHeader,\n  StyledPriceValue,\n  TextTypography,\n  StyledPrice,\n  StyledButton,\n  StyledTypography,\n  StyledIconButton,\n  StyledCustomTypography,\n  StyledBox,\n  CustomDivContainer,\n  CustomContainer,\n  LatestServicesDiv,\n} from \"./styles\";\nimport { StyledAbout } from \"../Categories/styles\";\ntype Props = {};\nconst LatestServices: React.FC<Props> = ({}) => {\n  const state = useSelector((state: RootState) => state.appstate);\n  const { AuthState } = useContext<any>(StateContext);\n  const { AuthDispatcher } = useContext<any>(DispatchContext);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const dispatch: Dispatch<any> = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [loaded, setLoaded] = useState(true);\n  const [active, setActive] = useState(false);\n\n  const route = useRouter();\n  const handleLogin = AuthState.user;\n  const [buttoncolor, setButtoncolor] = useState<any>(false);\n  const handleColor = () => {\n    if (!active) {\n      setActive(true);\n    } else {\n      setActive(false);\n    }\n  };\n  const [activeButton, setActiveButton] = useState([]);\n\n  const handleOpen = () => {\n    if (handleLogin === null || handleLogin === undefined) {\n      setLoggedIn(false);\n      setOpen(true);\n    } else {\n      setLoggedIn(true);\n      handleColor();\n      setOpen(false);\n      setButtoncolor(true);\n    }\n  };\n\n  useEffect(() => {\n    if (state.mainservices === null || state.mainservices.length < 0) {\n      setLoaded(true);\n    } else if (state.mainservices.length > 0) {\n      setLoaded(false);\n    }\n  });\n  console.log(\"displaying mainservices\", state.mainservices);\n  const Rendermobile = () => {\n    return (\n      <div className=\"navbar__catwrappermobile\">\n        <div className=\"navbar__sizewidth\">\n          <Paper elevation={0} sx={{ height: \"110%\" }}>\n            <StyledBox>\n              <StyledCustomTypography\n                sx={{\n                  marginLeft: \"20px\",\n                  fontFamily: \"serif\",\n                  fontSize: \"1.3rem\",\n                }}\n              >\n                All Services\n              </StyledCustomTypography>\n            </StyledBox>\n            {loaded ? (\n              <Skeleton\n                count={1}\n                height={\"100px\"}\n                containerClassName=\"flexitems__mobilelatestservices\"\n                style={{\n                  marginLeft: \"15px\",\n                  borderRadius: \"0.5rem\",\n\n                  justifyContent: \"center\",\n                  marginTop: \"10px\",\n                }}\n                width={\"350px\"}\n              />\n            ) : (\n              <div className=\"flexitems__mobilelatestservices\">\n                {state.allservicedata.slice(0, 9)?.map(\n                  (\n                    item: {\n                      type:\n                        | boolean\n                        | React.ReactChild\n                        | React.ReactFragment\n                        | React.ReactPortal\n                        | null\n                        | undefined;\n                      categories_id: number;\n                      image: any;\n                      name: string;\n                      services_id: number;\n                      about: string;\n                      price: number;\n                      updated_at: string;\n                    },\n                    i: string | number | any\n                  ) => (\n                    <div\n                      key={item.services_id}\n                      style={{\n                        position: \"relative\",\n                      }}\n                    >\n                      <div\n                        key={Math.random()}\n                        onClick={() => {\n                          route.push(\"/services?ad=\" + item?.services_id);\n                        }}\n                      >\n                        <div\n                          style={{\n                            display: \"flex\",\n                            borderRadius: \"10px\",\n\n                            marginLeft: \"11px\",\n                            justifyContent: \"left\",\n                            gap: \"10px\",\n                          }}\n                        >\n                          <img\n                            src={item.image}\n                            style={{\n                              height: \"70px\",\n                              width: \"100px\",\n                              borderRadius: \"13px\",\n\n                              objectFit: \"cover\",\n                            }}\n                          ></img>\n                          <div>\n                            <StyledTypographyHeader>\n                              {\" \"}\n                              {item.about}\n                            </StyledTypographyHeader>\n                            <StyledPriceValue>${item.price}</StyledPriceValue>\n                          </div>\n                        </div>\n                        <div\n                          style={{\n                            display: \"flex\",\n                            borderRadius: \"10px\",\n\n                            marginLeft: \"11px\",\n                            justifyContent: \"left\",\n                            gap: \"3px\",\n                            marginTop: \"6px\",\n                          }}\n                        >\n                          <Avatar\n                            sx={{ height: \"16px\", width: \"16px\" }}\n                          ></Avatar>\n                          <TextTypography>{item.name}</TextTypography>\n                        </div>\n                      </div>\n                      <br></br>\n                      <Divider />\n                    </div>\n                  )\n                )}\n                <LoginModal\n                  OpenModalForm={open}\n                  CloseModalForm={() => setOpen(false)}\n                />{\" \"}\n              </div>\n            )}\n          </Paper>\n          <br></br>\n          <br></br>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <>\n      {Rendermobile()}\n      <div className=\"navbar__mycontainer\" style={{ marginTop: \"-40px\" }}>\n        <CustomContainer>\n          <CustomDivContainer>\n            <Paper elevation={2} sx={{ height: \"110%\" }}>\n              <StyledBox>\n                <StyledCustomTypography\n                  variant=\"h5\"\n                  style={{ marginLeft: \"2%\", fontFamily: \"serif\" }}\n                >\n                  All Services\n                </StyledCustomTypography>\n                <StyledCustomTypography\n                  style={{\n                    marginRight: \"2%\",\n                    fontFamily: \"serif\",\n                    fontSize: \"15px\",\n                    textDecoration: \"underline\",\n                  }}\n                >\n                  See All\n                </StyledCustomTypography>\n              </StyledBox>\n              {loaded ? (\n                <Skeleton\n                  count={6}\n                  inline\n                  height={300}\n                  containerClassName=\"flexitems__latestservices\"\n                  style={{\n                    marginLeft: \"15px\",\n                    borderRadius: \"0.5rem\",\n\n                    justifyContent: \"center\",\n                    marginTop: \"10px\",\n                  }}\n                  width={\"270px\"}\n                />\n              ) : (\n                <LatestServicesDiv>\n                  {state.allservicedata.slice(0, 9)?.map(\n                    (\n                      item: {\n                        type:\n                          | boolean\n                          | React.ReactChild\n                          | React.ReactFragment\n                          | React.ReactPortal\n                          | null\n                          | undefined;\n                        categories_id: number;\n                        image: any;\n                        name: string;\n                        services_id: number;\n                        about: string;\n                        price: number;\n                        updated_at: string;\n                      },\n                      i: string | number | any\n                    ) => (\n                      <div\n                        key={item.services_id}\n                        style={{\n                          position: \"relative\",\n                          marginLeft: \"1%\",\n                        }}\n                      >\n                        <StyledCard\n                          key={Math.random()}\n                          elevation={6}\n                          onClick={() => {\n                            route.push(\"/services?ad=\" + item?.services_id);\n                          }}\n                        >\n                          <div\n                            style={{\n                              width: \"100%\",\n                            }}\n                          >\n                            <div\n                              style={{\n                                display: \"flex\",\n                              }}\n                            >\n                              <img\n                                src={item.image}\n                                style={{\n                                  height: \"200px\",\n                                  width: \"100%\",\n                                  objectFit: \"cover\",\n                                }}\n                              ></img>\n                            </div>\n                            <div\n                              style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                marginLeft: \"4%\",\n                                marginTop: \"2%\",\n                              }}\n                            >\n                              <div style={{ display: \"flex\" }}>\n                                <span>\n                                  <Avatar />\n                                </span>\n                                <div\n                                  style={{\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                  }}\n                                >\n                                  <span>\n                                    <TextTypography>{item.name}</TextTypography>\n                                  </span>\n                                  <span>\n                                    <TextTypography>\n                                      {moment(item.updated_at).format(\n                                        \"MMM Do \"\n                                      )}\n                                    </TextTypography>\n                                  </span>\n                                </div>\n                              </div>\n                              <span>\n                                <StyledTypography>{item.type}</StyledTypography>\n                                <StyledTypographyHeader>\n                                  {item.about}\n                                </StyledTypographyHeader>\n                              </span>\n                              <div\n                                style={{\n                                  height: \"50px\",\n                                  background: \"#152238\",\n\n                                  width: \"114%\",\n                                  marginLeft: \"-4.5%\",\n                                  display: \"flex\",\n                                  marginTop: \"5%\",\n                                  justifyContent: \"flex-end\",\n                                  alignSelf: \"flex-end\",\n                                  justifyItems: \"flex-end\",\n\n                                  alignItems: \"flex-end\",\n                                }}\n                              >\n                                <div\n                                  style={{\n                                    display: \"flex\",\n                                    width: \"100%\",\n\n                                    alignSelf: \"flex-end\",\n\n                                    justifyContent: \"space-evenly\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <StyledIconButton\n                                    key={item.services_id}\n                                    onClick={handleOpen}\n                                  >\n                                    <FavoriteBorderIcon\n                                      style={{ color: \"white\" }}\n                                    />\n                                  </StyledIconButton>\n\n                                  <StyledPrice> STARTING AT</StyledPrice>\n                                  <StyledPriceValue>\n                                    ${item.price}\n                                  </StyledPriceValue>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </StyledCard>\n                      </div>\n                    )\n                  )}\n                  <LoginModal\n                    OpenModalForm={open}\n                    CloseModalForm={() => setOpen(false)}\n                  />{\" \"}\n                </LatestServicesDiv>\n              )}\n\n              <br></br>\n            </Paper>\n            <br></br>\n          </CustomDivContainer>\n        </CustomContainer>\n      </div>\n    </>\n  );\n};\nexport default LatestServices;\n","/Users/oghenemano/cyplusmega/cyplusmega/components/TopCategories/styles.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/CustomLoader/CustomLoader.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/CustomLoader/index.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Recommended/Recommended.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Recommended/style.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/pages/contact-us.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/pages/my-favorite.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/pages/order.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/pages/privacy-security.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Authentication/Signin/Signin.tsx",["349","350"],[],"import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Divider,\n  IconButton,\n  Typography,\n  Box,\n  TextField,\n} from \"@mui/material\";\nimport { AxiosError, AxiosResponse } from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  StyledButton,\n  StyleCheckoutButton,\n  StyledTypography,\n  StyledButtonGoogle,\n  StyledTextField,\n  StyleLoadingButton,\n  CustomDivider,\n  StyledBox,\n} from \"./styles\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport Clientapi from \"../../../pages/api/client\";\nimport StateContext from \"../../../context/StateContext\";\nimport DispatchContext from \"../../../context/DispatchContext\";\nimport Cookies from \"js-cookie\";\nimport ReCaptchaV2 from \"react-google-recaptcha\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { LoginModal } from \"../../LoginModal/Loginmodal\";\n\ntype Props = {\n  saveUser: (article: IArticle | any) => void;\n  CloseModalForm: () => void;\n  onSuccess: () => void;\n};\nconst Signin: React.FC<Props> = ({ saveUser, CloseModalForm, onSuccess }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const { AuthState } = useContext<any>(StateContext);\n  const { AuthDispatcher } = useContext<any>(DispatchContext);\n  const [recapcha, setRecapcha] = useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handleClick() {\n    setLoading(true);\n  }\n  const [loginsucess, setLoginsucess] = useState(true);\n  const [article, setArticle] = React.useState<IArticle | {}>();\n\n  const onSubmit = async (data: any) => {\n    console.log(data.email);\n    console.log(data.password);\n    if (!recapcha) {\n      console.log(\"please use recaptcha\");\n      setLoginsucess(true);\n    } else {\n      await handleClick();\n      await Clientapi.post(\"api/login\", data)\n        .then((response) => {\n          console.log(\"it worked hahha\", response);\n          const user = response.data;\n          console.log(\"your auth token is\", response.data.auth_token);\n\n          Cookies.set(\"auth_token\", response.data.auth_token);\n          AuthDispatcher({ type: \"login\" });\n          AuthDispatcher({ type: \"addUser\", payload: response.data });\n\n          setArticle({\n            ...article,\n            user,\n          });\n          console.log(\"article payload data\", article);\n          saveUser(article);\n\n          console.log(\"the user state is\", AuthState.user);\n          onSuccess();\n          setLoginsucess(true);\n\n          setLoading(false);\n        })\n        .catch((err: AxiosError) => {\n          setLoginsucess(false);\n          console.log(\"invalid data entered\");\n          setLoading(false);\n        });\n    }\n  };\n\n  console.log(\"finding the recaptcha \", process.env.NEXT_PUBLIC_SITE_KEY);\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"flexitems__flexsignin\">\n        <Typography\n          style={{\n            fontSize: \"1.4rem\",\n            color: \"#152238\",\n            fontWeight: \"bold\",\n            marginTop: \"30px\",\n          }}\n        >\n          Log In\n        </Typography>\n        <CustomDivider />\n        {!loginsucess && (\n          <StyledBox sx={{ background: \"red\" }}>\n            <Typography\n              color=\"white\"\n              align=\"center\"\n              sx={{ fontSize: \"0.9rem\", fontFamily: \"serif\" }}\n            >\n              Email or password is incorrect\n            </Typography>\n          </StyledBox>\n        )}\n        <StyledTextField\n          type=\"text\"\n          size=\"small\"\n          label=\"email\"\n          {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\n        />\n        <StyledTextField\n          type=\"password\"\n          size=\"small\"\n          {...register(\"password\", { required: true, maxLength: 100 })}\n          label=\"password\"\n        />\n        <br></br>\n        <ReCaptchaV2\n          sitekey=\"6LeotcQfAAAAAHVLOUkTTNL0tk0ic512fOIaVEPG\"\n          className=\"flexitems__recaptchadesgin\"\n          onChange={() => {\n            setRecapcha(true);\n          }}\n        />\n        {loading ? (\n          <StyleLoadingButton\n            loading={loading}\n            loadingPosition=\"end\"\n            endIcon={<ArrowForwardIosIcon />}\n            variant=\"contained\"\n          >\n            Login\n          </StyleLoadingButton>\n        ) : (\n          <StyleCheckoutButton\n            type=\"submit\"\n            variant=\"contained\"\n            endIcon={<ArrowForwardIosIcon />}\n          >\n            {\" \"}\n            Login\n          </StyleCheckoutButton>\n        )}\n        <StyledTypography>\n          {\"        Don't have an Account?\"}\n          <Button\n            variant=\"text\"\n            sx={{ textTransform: \"none\" }}\n            onClick={() => {\n              handleOpen();\n            }}\n          >\n            SignUp\n          </Button>\n        </StyledTypography>\n        <LoginModal\n          OpenModalForm={open}\n          isSignup={true}\n          CloseModalForm={handleClose}\n        />{\" \"}\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            width: \"100%\",\n          }}\n        >\n          <StyledButton>\n            {\" \"}\n            <img\n              src=\"fb.png\"\n              alt=\"facebookimage\"\n              height={20}\n              style={{\n                color: \"white\",\n                background: \"white\",\n                marginRight: \"2px\",\n\n                position: \"relative\",\n              }}\n            ></img>\n            Facebook\n          </StyledButton>\n          <StyledButtonGoogle>\n            {\" \"}\n            <img\n              src=\"google.png\"\n              alt=\"googleimage\"\n              height={20}\n              style={{\n                color: \"white\",\n                background: \"white\",\n                marginRight: \"2px\",\n\n                position: \"relative\",\n              }}\n            ></img>\n            Google\n          </StyledButtonGoogle>\n        </div>\n        <br></br>\n        <br></br>\n      </div>\n    </Box>\n  );\n};\nexport default Signin;\n","/Users/oghenemano/cyplusmega/cyplusmega/components/Authentication/Signin/index.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Authentication/Signin/styles.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Authentication/Signup/Signup.tsx",["351","352"],[],"import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Divider,\n  IconButton,\n  Typography,\n  Box,\n  TextField,\n} from \"@mui/material\";\nimport { AxiosError, AxiosResponse } from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  StyledButton,\n  StyleCheckoutButton,\n  StyledTypography,\n  StyledButtonGoogle,\n  StyledTextField,\n  StyleLoadingButton,\n  CustomDivider,\n  StyledBox,\n} from \"./styles\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport Clientapi from \"../../../pages/api/client\";\nimport StateContext from \"../../../context/StateContext\";\nimport DispatchContext from \"../../../context/DispatchContext\";\nimport Cookies from \"js-cookie\";\nimport ReCaptchaV2 from \"react-google-recaptcha\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { LoginModal } from \"../../LoginModal/Loginmodal\";\n\ntype Props = {\n  saveUser: (article: IArticle | any) => void;\n  CloseModalForm: () => void;\n  onSuccess: () => void;\n};\nconst SignUp: React.FC<Props> = ({ saveUser, CloseModalForm, onSuccess }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const { AuthState } = useContext<any>(StateContext);\n  const { AuthDispatcher } = useContext<any>(DispatchContext);\n  const [recapcha, setRecapcha] = useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handleClick() {\n    setLoading(true);\n  }\n  const [loginsucess, setLoginsucess] = useState(true);\n  const [article, setArticle] = React.useState<IArticle | {}>();\n\n  const onSubmit = async (data: any) => {\n    console.log(data.email);\n    console.log(data.password);\n    if (!recapcha) {\n      console.log(\"please use recaptcha\");\n      setLoginsucess(true);\n    } else {\n      await handleClick();\n      await Clientapi.post(\"api/login\", data)\n        .then((response) => {\n          console.log(\"it worked hahha\", response);\n          const user = response.data;\n          console.log(\"your auth token is\", response.data.auth_token);\n\n          Cookies.set(\"auth_token\", response.data.auth_token);\n          AuthDispatcher({ type: \"login\" });\n          AuthDispatcher({ type: \"addUser\", payload: response.data });\n\n          setArticle({\n            ...article,\n            user,\n          });\n          console.log(\"article payload data\", article);\n          saveUser(article);\n\n          console.log(\"the user state is\", AuthState.user);\n          onSuccess();\n          setLoginsucess(true);\n\n          setLoading(false);\n        })\n        .catch((err: AxiosError) => {\n          setLoginsucess(false);\n          console.log(\"invalid data entered\");\n          setLoading(false);\n        });\n    }\n  };\n\n  console.log(\"finding the recaptcha \", process.env.NEXT_PUBLIC_SITE_KEY);\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"flexitems__flexsignin\">\n        <Typography\n          style={{\n            fontSize: \"1.4rem\",\n            color: \"#152238\",\n            fontWeight: \"bold\",\n            marginTop: \"30px\",\n          }}\n        >\n          Log In\n        </Typography>\n        <CustomDivider />\n        {!loginsucess && (\n          <StyledBox sx={{ background: \"red\" }}>\n            <Typography\n              color=\"white\"\n              align=\"center\"\n              sx={{ fontSize: \"0.9rem\", fontFamily: \"serif\" }}\n            >\n              Email or password is incorrect\n            </Typography>\n          </StyledBox>\n        )}\n        <StyledTextField\n          type=\"text\"\n          size=\"small\"\n          label=\"email\"\n          {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\n        />\n        <StyledTextField\n          type=\"password\"\n          size=\"small\"\n          {...register(\"password\", { required: true, maxLength: 100 })}\n          label=\"password\"\n        />\n        <br></br>\n        <ReCaptchaV2\n          sitekey=\"6LeotcQfAAAAAHVLOUkTTNL0tk0ic512fOIaVEPG\"\n          onChange={() => {\n            setRecapcha(true);\n          }}\n        />\n        {loading ? (\n          <StyleLoadingButton\n            loading={loading}\n            loadingPosition=\"end\"\n            endIcon={<ArrowForwardIosIcon />}\n            variant=\"contained\"\n          >\n            Login\n          </StyleLoadingButton>\n        ) : (\n          <StyleCheckoutButton\n            type=\"submit\"\n            variant=\"contained\"\n            endIcon={<ArrowForwardIosIcon />}\n          >\n            {\" \"}\n            Login\n          </StyleCheckoutButton>\n        )}\n        <StyledTypography>\n          {\"        Don't have an Account?\"}\n          <Button\n            variant=\"text\"\n            sx={{ textTransform: \"none\" }}\n            onClick={() => {\n              handleOpen();\n            }}\n          >\n            SignUp\n          </Button>\n        </StyledTypography>\n        <LoginModal\n          OpenModalForm={open}\n          isSignup={true}\n          CloseModalForm={handleClose}\n        />{\" \"}\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            width: \"100%\",\n          }}\n        >\n          <StyledButton>\n            {\" \"}\n            <img\n              src=\"fb.png\"\n              alt=\"facebookimage\"\n              height={20}\n              style={{\n                color: \"white\",\n                background: \"white\",\n                marginRight: \"2px\",\n\n                position: \"relative\",\n              }}\n            ></img>\n            Facebook\n          </StyledButton>\n          <StyledButtonGoogle>\n            {\" \"}\n            <img\n              src=\"google.png\"\n              alt=\"googleimage\"\n              height={20}\n              style={{\n                color: \"white\",\n                background: \"white\",\n                marginRight: \"2px\",\n\n                position: \"relative\",\n              }}\n            ></img>\n            Google\n          </StyledButtonGoogle>\n        </div>\n        <br></br>\n        <br></br>\n      </div>\n    </Box>\n  );\n};\nexport default SignUp;\n","/Users/oghenemano/cyplusmega/cyplusmega/components/CookieManager/Cookie.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/CustomersFavorite/CustomerFavorite.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Profile/ContactUs/ContactUs.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Profile/Orders/Orders.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Profile/Security/EditLogin.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Profile/styles.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Authentication/Signup/styles.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Service/Service.tsx",["353"],[],"import React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Box from \"@mui/material/Box\";\nimport { Dispatch } from \"redux\";\n\nimport { actionCreators } from \"../../state\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport StateContext from \"../../context/StateContext\";\nimport DispatchContext from \"../../context/DispatchContext\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { StyledTabs, StyledTab } from \"./styles\";\nimport Clientapi from \"../../pages/api/client\";\nimport { useRouter } from \"next/router\";\nimport { RootState } from \"../../state/reducers\";\nimport SwiperThumb from \"./Swiper\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\n\nimport {\n  StyledDiv,\n  StyledWrapper,\n  MainSub,\n  NormalTypography,\n  StyledImageDiv,\n  StyledSubWrapper,\n  StyledAvatar,\n  StyledMainHeaderText,\n  RandomFlex,\n  StyledMainText,\n  StyledContact,\n  StyledButton,\n  CustomDivider,\n  ContainerDiv,\n} from \"./styles\";\nexport default function Service() {\n  const [value, setValue] = React.useState(\"Overview\");\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n  const route = useRouter();\n  const query = route.query;\n  const handle = query[\"ad\"];\n\n  const services_id = handle;\n  const data = { services_id: 2 };\n  const { AuthState } = React.useContext<any>(StateContext);\n  const { AuthDispatcher } = React.useContext<any>(DispatchContext);\n  const dispatch: Dispatch<any> = useDispatch();\n  const state = useSelector((state: RootState) => state.appstate);\n  const [favorite, setFavorite] = React.useState(false);\n\n  let offer = [];\n  //card color #D9D9D9\n  const handleFavorite = () => {\n    setFavorite(!favorite);\n  };\n  const { getmainservices } = bindActionCreators(actionCreators, dispatch);\n  function getServices() {\n    Clientapi.get(`/api/company/services`).then((response) => {\n      offer = response.data.filter(\n        (items: any) => items?.services_id == handle\n      );\n      getmainservices(offer);\n      console.log(\"the service ad data is \", offer);\n    });\n  }\n  React.useEffect(() => {\n    getServices();\n  }, []);\n\n  console.log(\"state service\", state.servicedata);\n  return (\n    <div className=\"navbar__mycontainer\">\n      <div className=\"navbar__catwrapper\">\n        <div style={{ width: \"80%\", position: \"relative\", marginTop: \"2%\" }}>\n          <Paper\n            sx={{\n              width: \"100%\",\n              border: \"solid 1px #D9D9D9\",\n\n              background: \"#f6f9f5\",\n              height: \"55px\",\n\n              position: \"sticky\",\n              top: 0,\n\n              zIndex: 100,\n            }}\n            elevation={0}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n\n                justifyContent: \"space-between\",\n              }}\n            >\n              <StyledTabs\n                value={value}\n                onChange={handleChange}\n                aria-label=\"secondary StyledTabs example\"\n              >\n                <StyledTab value=\"Overview\" label=\"Overview\" />\n\n                <StyledTab value=\"Description\" label=\"Description\" />\n\n                <StyledTab value=\"About\" label=\"About seller\" />\n                <StyledTab value=\"Similar\" label=\"Similar services\" />\n                <StyledTab value=\"Reviews\" label=\"Reviews\" />\n              </StyledTabs>\n\n              <IconButton\n                onClick={() => {\n                  handleFavorite();\n                }}\n              >\n                {favorite ? (\n                  <FavoriteBorderIcon />\n                ) : (\n                  <FavoriteIcon sx={{ color: \"red\" }} />\n                )}\n              </IconButton>\n            </div>\n          </Paper>\n          {/*    <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"left\",\n              alignItems: \"center\",\n              gap: \"20px\",\n              marginTop: \"10px\",\n            }}\n          >\n            {/*  <div className=\"listitem__mainlist\">\n              <ul>\n                <li>Home</li>\n              </ul>\n            </div>\n            <div>Service</div> \n          </div> */}\n          <StyledDiv sx={{ width: \"100%\" }}>\n            {\" \"}\n            {state.servicedata.map((item: any) => (\n              <StyledWrapper key={Math.random()}>\n                <StyledSubWrapper>\n                  <MainSub>\n                    <ContainerDiv id=\"Overview\">\n                      <StyledImageDiv>\n                        <SwiperThumb myimage={item} />\n                      </StyledImageDiv>\n                      <RandomFlex>\n                        <StyledAvatar />\n                        <StyledMainText>mano</StyledMainText>\n                      </RandomFlex>\n                    </ContainerDiv>\n                    <br></br>\n                    <ContainerDiv>\n                      <StyledMainHeaderText id=\"Description\">\n                        Description\n                      </StyledMainHeaderText>\n                      <StyledMainText paragraph>{item.About}</StyledMainText>\n                    </ContainerDiv>\n                    <br></br>\n                    <ContainerDiv>\n                      <StyledMainHeaderText id=\"About\">\n                        About this Seller\n                      </StyledMainHeaderText>\n                      <StyledMainText paragraph>\n                        A course description is a brief summary of the\n                        significant learning experiences for a course. Course\n                        descriptions appear in individual Course Outlines and in\n                        the Program of Studies (POSs) for individual programs.\n                      </StyledMainText>\n                    </ContainerDiv>\n                  </MainSub>\n                </StyledSubWrapper>\n                <StyledContact\n                  sx={{\n                    position: \"sticky\",\n                    top: 100,\n\n                    zIndex: 1,\n                  }}\n                >\n                  <ContainerDiv>\n                    <div\n                      style={{\n                        display: \"flex\",\n\n                        flexDirection: \"column\",\n                        width: \"100%\",\n                        justifyContent: \"center\",\n                        justifyItems: \"center\",\n                        gap: \"10px\",\n\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <StyledMainHeaderText align=\"center\">\n                        Find out more about this seller\n                      </StyledMainHeaderText>\n                      <CustomDivider />\n                      <StyledAvatar\n                        variant=\"square\"\n                        sx={{ width: \"50%\", margin: \"10px\" }}\n                      />\n                      <NormalTypography align=\"center\">\n                        {item?.title}\n                      </NormalTypography>\n                      <StyledButton variant=\"contained\">\n                        Send Enquiry{\" \"}\n                      </StyledButton>\n                      <NormalTypography align=\"center\">\n                        Submit an enquiry direct\n                      </NormalTypography>\n                      <br></br>\n                    </div>\n                  </ContainerDiv>\n                </StyledContact>\n              </StyledWrapper>\n            ))}\n          </StyledDiv>\n        </div>{\" \"}\n      </div>{\" \"}\n      <div style={{ marginTop: \"37%\" }}></div>\n    </div>\n  );\n}\n","/Users/oghenemano/cyplusmega/cyplusmega/components/Service/styles.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/LanguageMenu/index.tsx",["354"],[],"import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport { CustomSelect, StyledDiv, StyledTypography } from \"./styles\";\nimport i18next from \"../../i18n/index\";\nimport i18n from \"../../i18n/index\";\n\nimport { Trans, useTranslation } from \"react-i18next\";\nexport default function LangulangMenu() {\n  let userfallback: any;\n  if (typeof window !== \"undefined\") {\n    userfallback = localStorage.getItem(\"i18nextLng\");\n  }\n\n  console.log(\"the userfall back language is\", userfallback);\n\n  const [langval, setLangval] = React.useState<any>(userfallback);\n  const [lang, setLang] = React.useState(langval);\n  const handleLanguageChange = (language: any) => {\n    i18next.options.lng = language;\n    i18n.changeLanguage(language);\n    localStorage.setItem(\"i18nextLng\", language);\n  };\n  React.useEffect(() => {\n    if (userfallback == lang) {\n      setLangval(userfallback.toString());\n    }\n  }, []);\n\n  if (userfallback === lang) {\n    console.log(\"hey userlanagaugae is same\");\n  }\n\n  const handleChange = (event: any) => {\n    setLang(event.target.value as string);\n  };\n\n  return (\n    <StyledDiv>\n      <FormControl>\n        <CustomSelect\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={lang}\n          displayEmpty\n          onChange={handleChange}\n        >\n          <MenuItem\n            value={\"en\"}\n            onClick={() => {\n              handleLanguageChange(\"en\");\n            }}\n          >\n            <StyledTypography> EN</StyledTypography>\n          </MenuItem>\n          <MenuItem\n            value={\"tr\"}\n            onClick={() => {\n              handleLanguageChange(\"tr\");\n            }}\n          >\n            <StyledTypography>TR</StyledTypography>\n          </MenuItem>\n        </CustomSelect>\n      </FormControl>\n    </StyledDiv>\n  );\n}\n","/Users/oghenemano/cyplusmega/cyplusmega/components/LanguageMenu/styles.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/pages/layout.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Search/Search.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Search/styles.tsx",[],[],"/Users/oghenemano/cyplusmega/cyplusmega/components/Service/Swiper/index.tsx",["355","356","357","358"],[],{"ruleId":"359","severity":1,"message":"360","line":193,"column":6,"nodeType":"361","endLine":193,"endColumn":18,"suggestions":"362"},{"ruleId":"363","severity":1,"message":"364","line":282,"column":25,"nodeType":"365","endLine":291,"endColumn":27},{"ruleId":"366","severity":1,"message":"367","line":282,"column":25,"nodeType":"365","endLine":291,"endColumn":27},{"ruleId":"359","severity":1,"message":"368","line":93,"column":3,"nodeType":"369","endLine":93,"endColumn":12,"suggestions":"370"},{"ruleId":"363","severity":1,"message":"364","line":169,"column":29,"nodeType":"365","endLine":179,"endColumn":31},{"ruleId":"366","severity":1,"message":"367","line":169,"column":29,"nodeType":"365","endLine":179,"endColumn":31},{"ruleId":"363","severity":1,"message":"364","line":268,"column":29,"nodeType":"365","endLine":277,"endColumn":31},{"ruleId":"366","severity":1,"message":"367","line":268,"column":29,"nodeType":"365","endLine":277,"endColumn":31},{"ruleId":"359","severity":1,"message":"371","line":96,"column":6,"nodeType":"361","endLine":96,"endColumn":8,"suggestions":"372"},{"ruleId":"363","severity":1,"message":"364","line":165,"column":23,"nodeType":"365","endLine":177,"endColumn":25},{"ruleId":"366","severity":1,"message":"367","line":165,"column":23,"nodeType":"365","endLine":177,"endColumn":25},{"ruleId":"359","severity":1,"message":"373","line":80,"column":3,"nodeType":"369","endLine":80,"endColumn":12,"suggestions":"374"},{"ruleId":"363","severity":1,"message":"364","line":162,"column":27,"nodeType":"365","endLine":170,"endColumn":28},{"ruleId":"366","severity":1,"message":"367","line":162,"column":27,"nodeType":"365","endLine":170,"endColumn":28},{"ruleId":"363","severity":1,"message":"364","line":300,"column":31,"nodeType":"365","endLine":307,"endColumn":32},{"ruleId":"366","severity":1,"message":"367","line":300,"column":31,"nodeType":"365","endLine":307,"endColumn":32},{"ruleId":"359","severity":1,"message":"375","line":12,"column":3,"nodeType":"376","endLine":12,"endColumn":18,"suggestions":"377"},{"ruleId":"359","severity":1,"message":"373","line":70,"column":3,"nodeType":"369","endLine":70,"endColumn":12,"suggestions":"378"},{"ruleId":"363","severity":1,"message":"364","line":152,"column":27,"nodeType":"365","endLine":161,"endColumn":28},{"ruleId":"366","severity":1,"message":"367","line":152,"column":27,"nodeType":"365","endLine":161,"endColumn":28},{"ruleId":"363","severity":1,"message":"364","line":291,"column":31,"nodeType":"365","endLine":298,"endColumn":32},{"ruleId":"366","severity":1,"message":"367","line":291,"column":31,"nodeType":"365","endLine":298,"endColumn":32},{"ruleId":"363","severity":1,"message":"364","line":192,"column":13,"nodeType":"365","endLine":203,"endColumn":14},{"ruleId":"363","severity":1,"message":"364","line":208,"column":13,"nodeType":"365","endLine":219,"endColumn":14},{"ruleId":"363","severity":1,"message":"364","line":191,"column":13,"nodeType":"365","endLine":202,"endColumn":14},{"ruleId":"363","severity":1,"message":"364","line":207,"column":13,"nodeType":"365","endLine":218,"endColumn":14},{"ruleId":"359","severity":1,"message":"379","line":75,"column":6,"nodeType":"361","endLine":75,"endColumn":8,"suggestions":"380"},{"ruleId":"359","severity":1,"message":"381","line":31,"column":6,"nodeType":"361","endLine":31,"endColumn":8,"suggestions":"382"},{"ruleId":"363","severity":1,"message":"364","line":32,"column":13,"nodeType":"365","endLine":32,"endColumn":39},{"ruleId":"366","severity":1,"message":"367","line":32,"column":13,"nodeType":"365","endLine":32,"endColumn":39},{"ruleId":"363","severity":1,"message":"364","line":47,"column":13,"nodeType":"365","endLine":47,"endColumn":39},{"ruleId":"366","severity":1,"message":"367","line":47,"column":13,"nodeType":"365","endLine":47,"endColumn":39},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'AuthDispatcher', 'AuthState.categorydata', 'AuthState.isLoggedIn', 'AuthState.user', 'allservices.length', 'depositMoney', 'getallservices', 'mainServices', 'mainservice.length', and 'storecategory'. Either include them or remove the dependency array.","ArrayExpression",["383"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect contains a call to 'setLoaded'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [state.categories] as a second argument to the useEffect Hook.","Identifier",["384"],"React Hook useEffect has missing dependencies: 'getIsbriskpackage', 'handle', 'services', 'state.services.length', and 'storeservices'. Either include them or remove the dependency array.",["385"],"React Hook useEffect contains a call to 'setLoaded'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [state.mainservices] as a second argument to the useEffect Hook.",["386"],"React Hook useEffect contains a call to 'setTestuser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [checkuser] as a second argument to the useEffect Hook.","MemberExpression",["387"],["388"],"React Hook React.useEffect has a missing dependency: 'getServices'. Either include it or remove the dependency array.",["389"],"React Hook React.useEffect has missing dependencies: 'lang' and 'userfallback'. Either include them or remove the dependency array.",["390"],{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"397","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},"Update the dependencies array to be: [AuthDispatcher, AuthState.categorydata, AuthState.isLoggedIn, AuthState.user, allservices.length, categories, depositMoney, getallservices, mainServices, mainservice.length, storecategory]",{"range":"406","text":"407"},"Add dependencies array: [state.categories]",{"range":"408","text":"409"},"Update the dependencies array to be: [getIsbriskpackage, handle, services, state.services.length, storeservices]",{"range":"410","text":"411"},"Add dependencies array: [state.mainservices]",{"range":"412","text":"413"},"Add dependencies array: [checkuser]",{"range":"414","text":"415"},{"range":"416","text":"413"},"Update the dependencies array to be: [getServices]",{"range":"417","text":"418"},"Update the dependencies array to be: [lang, userfallback]",{"range":"419","text":"420"},[5951,5963],"[AuthDispatcher, AuthState.categorydata, AuthState.isLoggedIn, AuthState.user, allservices.length, categories, depositMoney, getallservices, mainServices, mainservice.length, storecategory]",[3144,3144],", [state.categories]",[3193,3195],"[getIsbriskpackage, handle, services, state.services.length, storeservices]",[2749,2749],", [state.mainservices]",[507,507],", [checkuser]",[2360,2360],[2381,2383],"[getServices]",[1126,1128],"[lang, userfallback]"]